.. _chap_meshes:

Meshes
******

Mesh files
==========

FESOM2 as well as FESOM1.4 is formulated on general triangular meshes. There are three mesh files that are read: **nod2d.out, elem2d.out** and **aux3d.out**.This three files is enough to define a mesh. These are ASCII files storing the information on the coordinates of mesh vertices, on how vertices are combined in triangles and on bottom depth at vertices.
The format of the files is as follows:

nod2d.out
^^^^^^^^^

+----------+-----------+-----------+------------+
|:math:`V` |           |           |            |
+----------+-----------+-----------+------------+
|:math:`v` |:math:`x_1`|:math:`y_1`|:math:`i_1` |
+----------+-----------+-----------+------------+
|...       |...        |...        | ...        |
+----------+-----------+-----------+------------+
|:math:`V` |:math:`x_V`|:math:`y_V`|:math:`i_V` |
+----------+-----------+-----------+------------+

Here :math:`V` is the number of surface vertices, :math:`x_v` and :math:`y_v` are the longitude and latitude (in angular measure) of vertex :math:`v`, and :math:`i_v` the index of vertex :math:`v`. This field is obsolete and is kept for mesh compatibility with FESOM1.4.

elem2d.out
^^^^^^^^^^

+--------------+--------------+--------------+
|:math:`C`     |              |              |
+--------------+--------------+--------------+
|:math:`v_{11}`|:math:`v_{12}`|:math:`v_{13}`|
+--------------+--------------+--------------+
|...           |...           |...           |
+--------------+--------------+--------------+
|:math:`v_{C1}`|:math:`v_{C2}`|:math:`v_{C3}`|
+--------------+--------------+--------------+

Here :math:`C` is the number of triangles, :math:`v_{c1}`, :math:`v_{c2}`, :math:`v_{c3}` are the vertices of triangle (cell) :math:`c`. The indexes of vertices are provided in the `nod2d` file (:math:`v`).

aux3d.out (to be renamed to depth.out)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+--------------+
|:math:`L`     |
+--------------+
|:math:`h_{1}` |
+--------------+
|...           |
+--------------+
|:math:`h_{l}` |
+--------------+
|...           |
+--------------+
|:math:`h_{L}` |
+--------------+
|:math:`H_{1}` |
+--------------+
|...           |
+--------------+
|:math:`H_{v}` |
+--------------+
|...           |
+--------------+
|:math:`H_{V}` |
+--------------+

Here :math:`L` is the number of model levels (e.g. sstandard is 48), :math:`h_{l}` is the depth of each model level and :math:`H_{v}` is the depth at each vertex defined in `nod2d.out` file.

Those three files are read during the mesh partitioning and several additional files are generated by the partitioner in the folder where the mesh files are located.

Mesh variables
==============

The `nod2d.out`, `elem2d.out` and `aux3s.out` files are read in variables and arrays with names inherited from FESOM1.4 where vertices were dubbed nodes and cells elements, to be reported further. Full files are only read on mesh partitioning step. Local copies are saved for each PE and read in production runs.

Name correspondence
^^^^^^^^^^^^^^^^^^^

- :math:`V\,\to {\tt nod2D}`

- :math:`C\,\to {\tt elem2D}`

- The array :math:`{\tt coord\_nod2D(1:2,1:myDim\_nod2D+eDim\_nod2D)}` stores vertex coordinates in radian measure. :math:`{\tt 1:myDim\_nod2D}` are the vertices that belong to my PE :math:`({\tt myPE})`, and :math:`{\tt myDim\_nod2D+1:myDim\_nod2D+eDim\_nod2D}` are the halo vertices. The halo vertices share a common triangle with vertices that belong to :math:`{\tt myPE}`, yet do not belong to :math:`{\tt myPE}`.

- Each column of array :math:`{\tt elem2D\_nodes(1:3,1:myDim\_elem2D+eDim\_elem2D+eXDim\_elem2D)}` stores vertex indices of particular triangle. :math:`{\tt 1:myDim\_elem2D}` are the triangles that belong to :math:`{\tt myPE}`, which are those that contain at least one vertex that belongs to :math:`{\tt myPE}`. Thus  triangles with vertices that belong to several PE counted as my triangle by each PE. The rest combines two types of halo: First triangles sharing an edge with my triangles are added, and then triangles that share vertex with my triangles, but are absent in the smaller halo.

- Local numbering is used on each PE. Additional arrays are available for local to global transform if needed.






    | Node number | x (lon) | y (lat) | Flag |

All files that describe the mesh are currently ASCII files. To define FESOM mesh only three files is enough: ``nod2d.out``, ``elem2d.out`` and ``aux3d.out``. However diring mesh partitioning several additional files are created that are nessesary for FESOM to work.

nod2d.out
---------

This file contains node numbers, positions of the nodes in geographical coordinates and a flag that indicate if the node is a wet point (0), located on the closed boundary (1) or is an open boundary (2). The columns are as follows:

::

    | Node number | x (lon) | y (lat) | Flag |

elem2d.out
----------

This file contains triples of numbers that form one elment of the grid (triangle, or face in therminology of UGRID). The node numbers are takein from the nod2d.out file. The columns are as follows:

::

    | First element | Second element | Third element |

aux3d.out
---------

This file contains information on the number of layers (first line), vertical layers (size of number of layers), and depths at nodes (size of number of nodes). The depths will be converted to model levels inside FESOM2.

